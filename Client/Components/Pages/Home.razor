@page "/"

@using TaskFlow.Client.Services
@using TaskFlow.Shared
@inject IUsersService UserService
@inject NavigationManager Navigation

<PageTitle>Welcome to TaskFlow</PageTitle>

<div class="container">
    <h1 class="text-center mt-5">Welcome to TaskFlow</h1>
    
    <p class="text-center mt-3">Manage your projects, tasks, and collaborate with your team efficiently!</p>

    <div class="row mt-5">
        <div class="col-md-4 mb-4">
            <div class="card text-center">
                <div class="card-body">
                    <h5 class="card-title">Users</h5>
                    <p class="card-text">Manage and view user profiles.</p>
                    <button class="btn btn-primary" @onclick="NavigateToUsers">Go to Users</button>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card text-center">
                <div class="card-body">
                    <h5 class="card-title">Projects</h5>
                    <p class="card-text">Create, edit, and track your projects.</p>
                    <button class="btn btn-primary" @onclick="NavigateToProjects">Go to Projects</button>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card text-center">
                <div class="card-body">
                    <h5 class="card-title">Tasks</h5>
                    <p class="card-text">Organize tasks within your projects.</p>
                    <button class="btn btn-primary" @onclick="NavigateToTasks">Go to Tasks</button>
                </div>
            </div>
        </div>
    </div>

    <div class="text-center mt-5">
        <h3>Latest Users</h3>
        @if (users == null)
        {
            <p><em>Loading...</em></p>
        }
        else if (users.Any())
        {
            <ul class="list-group list-group-flush">
                @foreach (var user in users.Take(5))
                {
                    <li class="list-group-item">@user.Username</li>
                }
            </ul>
        }
        else
        {
            <p><em>No users found.</em></p>
        }
    </div>
</div>

@code {
    private IEnumerable<TaskFlow.Shared.Models.Users> users;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            users = await UserService.GetAllUsersAsync();
        }
        catch (Exception ex)
        {
            // Log the exception or show a user-friendly error message
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    private void NavigateToUsers() => Navigation.NavigateTo("/users");
    private void NavigateToProjects() => Navigation.NavigateTo("/projects");
    private void NavigateToTasks() => Navigation.NavigateTo("/tasks");
}